echo "create lesson7.c ..."
if [ "1" ] ; then 
fi > lesson7.c

echo "create makefile ..."
if [ "1" ] ; then 
echo 'INCLUDE = -I/usr/X11R6/include'
echo 'LIBDIR  = -L/usr/X11R6/lib'
echo ''
echo 'COMPILERFLAGS = -Wall'
echo 'CC = gcc'
echo 'CFLAGS = $(COMPILERFLAGS) $(INCLUDE)'
echo 'LIBRARIES =  -lglut -lGL -lGLU -lX11 -lm -L/usr/X11R6/lib'
echo ''
echo '# for all, set the targets to be every lesson1.c-lesson13.c '
echo '# file, removing the .c extension.  That is, at this point,'
echo '# it would produce lesson1, lesson2, lesson3,...,lesson13 targets.'
echo '#'
echo 'all: $(basename $(wildcard lesson[1-9].c lesson1[0-3].c lesson[1-9].cpp lesson1[0-3].cpp))'
echo ''
echo '# same as for all, except set the targets to be '
echo '# lessonX.tar.gz from lessonX.c.  This is really'
echo '# only used to build smaller tutorial .tar.gz files'
echo '# to send to nehe.'
echo '#'
echo 'dist: $(foreach file,$(basename $(wildcard lesson[1-9].c lesson1[0-3].c)),$(file).tar.gz)'
echo ''
echo '# to produce, say, lesson1.tar.gz:'
echo '#'
echo '# 1. remove lesson1.tar.gz'
echo '# 2. build lesson1.tar containing README, makefile, lesson1.c, Data/lesson1/*.'
echo '# 3. gzip lesson1.tar.'
echo '#'
echo 'lesson%.tar.gz : '
echo '	tar cvf $(subst .tar.gz,.tar,$@) README makefile $(subst .tar.gz,.c,$@) $(wildcard Data/$(subst .tar.gz,,$@)/*); \'
echo '	gzip $(subst .tar.gz,.tar,$@);'
echo ''
echo '# to produce, say, lesson1:'
echo '#'
echo '# 1. compile the thing.  uses the variables defined above.'
echo '# '
echo 'lesson% : lesson%.o'
echo '	$(CC) $(CFLAGS) -o $@ $(LIBDIR) $< $(LIBRARIES)  '
echo ''
echo '# to clean up:'
echo '# delete all of the lessonX files.'
echo 'clean:'
echo '	rm $(wildcard lesson[1-9] lesson1[0-3])'
echo ''
echo '# to clean up the distributions:'
echo '# delete all of the lessonX.tar.gz files.'
echo 'distclean:'
echo '	rm $(wildcard lesson[1-9].tar.gz lesson1[0-3].tar.gz)'
echo ''
fi > makefile

