echo "create main.cpp ..."
if [ "1" ] ; then 
echo '/*'
echo ''
echo '    Qt OpenGL Tutorial - Lesson 02'
echo ''
echo '    main.cpp'
echo '    v 1.00'
echo '    2002/12/05'
echo ''
echo '    Copyright (C) 2002 Cavendish'
echo '                       cavendish@qiliang.net'
echo '                       http://www.qiliang.net/nehe_qt'
echo ''
echo '    This program is free software; you can redistribute it and/or modify'
echo '    it under the terms of the GNU General Public License as published by'
echo '    the Free Software Foundation; either version 2 of the License, or'
echo '    (at your option) any later version.'
echo ''
echo '*/'
echo ''
echo '#include <qapplication.h>'
echo '#include <qmessagebox.h>'
echo '#include <QWidget>'
echo '#include "nehewidget.h"'
echo '#include "mainwindow.h"'
echo ''
echo 'int main( int argc, char **argv )'
echo '{'
echo '  bool fs = false;'
echo ''
echo '  QApplication a(argc,argv);'
echo ''
echo '  //NeHeWidget w( 0, 0, fs );'
echo '//  a.setMainWidget( &w );'
echo '  //w.show();'
echo '  MainWidget * w = new MainWidget();'
echo '  w->show();'
echo '  '
echo '  return a.exec();'
echo '}'
fi > main.cpp

echo "create mainwindow.h ..."
if [ "1" ] ; then 
echo '#ifndef __MAINWINDOW_H__'
echo '#define __MAINWINDOW_H__'
echo ''
echo '#include <QtGui>'
echo '#include "nehewidget.h"'
echo ''
echo 'class MainWidget : public QWidget'
echo '{'
echo '	Q_OBJECT'
echo ''
echo 'public:'
echo '	MainWidget(QWidget * parent = 0) : QWidget(parent)'
echo '	{'
echo ''
echo '		ori_x_label = new QLabel(tr("ori x :"));'
echo '		ori_x_edit = new QLineEdit(tr("50.00"));'
echo ''
echo '		ori_y_label = new QLabel(tr("ori y :"));'
echo '		ori_y_edit = new QLineEdit(tr("50.00"));'
echo ''
echo '		ori_z_label = new QLabel(tr("ori z :"));'
echo '		ori_z_edit = new QLineEdit(tr("0.00"));'
echo ''
echo '		radius_label = new QLabel(tr("radius :"));'
echo '		radius_edit = new QLineEdit(tr("5"));'
echo ''
echo '		step_length_label = new QLabel(tr("step length :"));'
echo '		step_length_edit = new QLineEdit(tr("20"));'
echo ''
echo '		nrows_label = new QLabel(tr("num rows :"));'
echo '		nrows_spin = new QSpinBox();'
echo '		nrows_spin->setValue(5);'
echo ''
echo '		ncols_label = new QLabel(tr("num cols :"));'
echo '		ncols_spin = new QSpinBox();'
echo '		ncols_spin->setValue(3);'
echo ''
echo '		nlayers_label = new QLabel(tr("num layers :"));'
echo '		nlayers_spin = new QSpinBox();'
echo '		nlayers_spin->setValue(1);'
echo ''
echo '		create_button = new QPushButton(tr("create"));'
echo '		clear_button = new QPushButton(tr("clear"));'
echo ''
echo '		gridLayout = new QGridLayout();'
echo '		gridLayout->addWidget(ori_x_label, 0, 0);'
echo '		gridLayout->addWidget(ori_x_edit, 0, 1);'
echo '		gridLayout->addWidget(ori_y_label, 1, 0);'
echo '		gridLayout->addWidget(ori_y_edit, 1, 1);'
echo '		gridLayout->addWidget(ori_z_label, 2, 0);'
echo '		gridLayout->addWidget(ori_z_edit, 2, 1);'
echo '		gridLayout->addWidget(radius_label, 3, 0);'
echo '		gridLayout->addWidget(radius_edit, 3, 1);'
echo '		gridLayout->addWidget(step_length_label, 4, 0);'
echo '		gridLayout->addWidget(step_length_edit, 4, 1);'
echo '		gridLayout->addWidget(nrows_label, 5, 0);'
echo '		gridLayout->addWidget(nrows_spin, 5, 1);'
echo '		gridLayout->addWidget(ncols_label, 6, 0);'
echo '		gridLayout->addWidget(ncols_spin, 6, 1);'
echo '		gridLayout->addWidget(nlayers_label, 7, 0);'
echo '		gridLayout->addWidget(nlayers_spin, 7, 1);'
echo '		gridLayout->addWidget(create_button, 8, 0, 1, 2);'
echo '		gridLayout->addWidget(clear_button, 9, 0, 1, 2);'
echo '		group_box1 = new QGroupBox();'
echo '		group_box1->setLayout(gridLayout);'
echo ''
echo '		glwidget = new NeHeWidget(this, "test" , 0);'
echo '		vbox = new QVBoxLayout();'
echo '		vbox->addWidget(glwidget);'
echo '		group_box2 = new QGroupBox();'
echo '		group_box2->setLayout(vbox);'
echo '	'
echo '		hbox = new QHBoxLayout();'
echo '		hbox->addWidget(group_box1);'
echo '		hbox->addWidget(group_box2, 1);'
echo ''
echo '		connect(ori_x_edit, SIGNAL(textChanged(const QString &)), this, SLOT(update()));'
echo '		connect(ori_y_edit, SIGNAL(textChanged(const QString &)), this, SLOT(update()));'
echo '		connect(ori_z_edit, SIGNAL(textChanged(const QString &)), this, SLOT(update()));'
echo '		connect(radius_edit, SIGNAL(textChanged(const QString &)), this, SLOT(update()));'
echo '		connect(step_length_edit, SIGNAL(textChanged(const QString &)), this, SLOT(update()));'
echo '		connect(nrows_spin, SIGNAL(valueChanged(int)), this, SLOT(update()));'
echo '		connect(ncols_spin, SIGNAL(valueChanged(int)), this, SLOT(update()));'
echo '		connect(nlayers_spin, SIGNAL(valueChanged(int)), this, SLOT(update()));'
echo ''
echo '		this->setLayout(hbox);'
echo '		this->setWindowTitle("Best Spanning Tree");'
echo ''
echo ''
echo '	}'
echo ''
echo '	~MainWidget(){}'
echo ''
echo 'public slots:'
echo '	void update()'
echo '	{'
echo '		ori_x =  ori_x_edit->text().toDouble();'
echo '		ori_y =  ori_y_edit->text().toDouble();'
echo '		ori_z =  ori_z_edit->text().toDouble();'
echo '		radius =  radius_edit->text().toDouble();'
echo '		step_length =  step_length_edit->text().toDouble();'
echo '		nrows =  nrows_spin->text().toInt();'
echo '		ncols =  ncols_spin->text().toInt();'
echo '		nlayers =  nlayers_spin->text().toInt();'
echo ''
echo '	}'
echo ''
echo 'public:'
echo '	double ori_x;'
echo '	double ori_y;'
echo '	double ori_z;'
echo '	double radius;'
echo '	double step_length;'
echo '	int nrows;'
echo '	int ncols;'
echo '	int nlayers;'
echo '	QLabel * ori_x_label;'
echo '	QLineEdit * ori_x_edit;'
echo ''
echo '	QLabel * ori_y_label;'
echo '	QLineEdit * ori_y_edit;'
echo ''
echo '	QLabel * ori_z_label;'
echo '	QLineEdit * ori_z_edit;'
echo ''
echo '	QLabel * radius_label;'
echo '	QLineEdit * radius_edit;'
echo ''
echo '	QLabel * step_length_label;'
echo '	QLineEdit * step_length_edit;'
echo ''
echo '	QLabel * nrows_label;'
echo '	QSpinBox * nrows_spin;'
echo ''
echo '	QLabel * ncols_label;'
echo '	QSpinBox * ncols_spin;'
echo ''
echo '	QLabel * nlayers_label;'
echo '	QSpinBox * nlayers_spin;'
echo ''
echo '	QPushButton * create_button;'
echo '	QPushButton * clear_button;'
echo ''
echo '	QGridLayout * gridLayout;'
echo '	QGroupBox * group_box1;'
echo '	QGroupBox * group_box2;'
echo ''
echo '	NeHeWidget * glwidget;'
echo ''
echo '	QVBoxLayout * vbox;'
echo '	QHBoxLayout * hbox;'
echo ''
echo ''
echo '};'
echo ''
echo '#endif'
fi > mainwindow.h

echo "create nehewidget.cpp ..."
if [ "1" ] ; then 
echo '/*'
echo ''
echo '    Qt OpenGL Tutorial - Lesson 02'
echo ''
echo '    nehewidget.cpp'
echo '    v 1.00'
echo '    2002/12/05'
echo ''
echo '    Copyright (C) 2002 Cavendish'
echo '                       cavendish@qiliang.net'
echo '                       http://www.qiliang.net/nehe_qt'
echo ''
echo '    This program is free software; you can redistribute it and/or modify'
echo '    it under the terms of the GNU General Public License as published by'
echo '    the Free Software Foundation; either version 2 of the License, or'
echo '    (at your option) any later version.'
echo ''
echo '*/'
echo ''
echo '#include "nehewidget.h"'
echo '#include <QKeyEvent>'
echo '#include <QGLWidget>'
echo '#include <QWidget>'
echo 'NeHeWidget::NeHeWidget( QWidget* parent, const char* name, bool fs )'
echo '    : QGLWidget( parent)'
echo '{'
echo '  fullscreen = fs;'
echo '  setGeometry( 0, 0, 640, 480 );'
echo ' // setCaption( "NeHe'"'"'s First Polygon Tutorial" );'
echo ''
echo '  if ( fullscreen )'
echo '    showFullScreen();'
echo '}'
echo ''
echo 'NeHeWidget::~NeHeWidget()'
echo '{'
echo '}'
echo ''
echo 'void NeHeWidget::paintGL()'
echo '{'
echo '  glClear( GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT );'
echo '  glLoadIdentity();'
echo '  '
echo '  glTranslatef( -1.5,  0.0, -6.0 );'
echo '  '
echo '  glBegin( GL_TRIANGLES );'
echo '    glVertex3f(  0.0,  1.0,  0.0 );'
echo '    glVertex3f( -1.0, -1.0,  0.0 );'
echo '    glVertex3f(  1.0, -1.0,  0.0 );'
echo '  glEnd();'
echo '  '
echo '  glTranslatef(  3.0,  0.0,  0.0 );'
echo '  '
echo '  glBegin( GL_QUADS );'
echo '    glVertex3f( -1.0,  1.0,  0.0 );'
echo '    glVertex3f(  1.0,  1.0,  0.0 );'
echo '    glVertex3f(  1.0, -1.0,  0.0 );'
echo '    glVertex3f( -1.0, -1.0,  0.0 );'
echo '  glEnd();'
echo '}'
echo ''
echo 'void NeHeWidget::initializeGL()'
echo '{'
echo '  glShadeModel( GL_SMOOTH );'
echo '  glClearColor( 0.0, 0.0, 0.0, 0.0 );'
echo '  glClearDepth( 1.0 );'
echo '  glEnable( GL_DEPTH_TEST );'
echo '  glDepthFunc( GL_LEQUAL );'
echo '  glHint( GL_PERSPECTIVE_CORRECTION_HINT, GL_NICEST );'
echo '}'
echo ''
echo 'void NeHeWidget::resizeGL( int width, int height )'
echo '{'
echo '  if ( height == 0 )'
echo '  {'
echo '    height = 1;'
echo '  }'
echo '  glViewport( 0, 0, (GLint)width, (GLint)height );'
echo '  glMatrixMode( GL_PROJECTION );'
echo '  glLoadIdentity();'
echo '  gluPerspective( 45.0, (GLfloat)width/(GLfloat)height, 0.1, 100.0 );'
echo '  glMatrixMode( GL_MODELVIEW );'
echo '  glLoadIdentity();'
echo '}'
echo ''
echo 'void NeHeWidget::keyPressEvent( QKeyEvent *e )'
echo '{'
echo '  switch ( e->key() )'
echo '  {'
echo '  case Qt::Key_F2:'
echo '    fullscreen = !fullscreen;'
echo '    if ( fullscreen )'
echo '    {'
echo '      showFullScreen();'
echo '    }'
echo '    else'
echo '    {'
echo '      showNormal();'
echo '      setGeometry( 0, 0, 640, 480 );'
echo '    }'
echo '    update();'
echo '    break;'
echo '  case Qt::Key_Escape:'
echo '    close();'
echo '  }'
echo '}'
fi > nehewidget.cpp

echo "create nehewidget.h ..."
if [ "1" ] ; then 
echo '/*'
echo ''
echo '    Qt OpenGL Tutorial - Lesson 02'
echo ''
echo '    nehewidget.h'
echo '    v 1.00'
echo '    2002/12/05'
echo ''
echo '    Copyright (C) 2002 Cavendish'
echo '                       cavendish@qiliang.net'
echo '                       http://www.qiliang.net/nehe_qt'
echo ''
echo '    This program is free software; you can redistribute it and/or modify'
echo '    it under the terms of the GNU General Public License as published by'
echo '    the Free Software Foundation; either version 2 of the License, or'
echo '    (at your option) any later version.'
echo ''
echo '*/'
echo ''
echo '#ifndef NEHEWIDGET_H'
echo '#define NEHEWIDGET_H'
echo ''
echo '#include <qgl.h>'
echo ''
echo 'class NeHeWidget : public QGLWidget'
echo '{'
echo '    Q_OBJECT'
echo ''
echo 'public:'
echo '    '
echo '  NeHeWidget( QWidget* parent = 0, const char* name = 0, bool fs = false );'
echo '  ~NeHeWidget();'
echo ''
echo 'protected:'
echo ''
echo '  void initializeGL();'
echo '  void paintGL();'
echo '  void resizeGL( int width, int height );'
echo ''
echo '  void keyPressEvent( QKeyEvent *e );'
echo ''
echo 'protected:'
echo ''
echo '  bool fullscreen;'
echo ''
echo '};'
echo ''
echo '#endif//NEHEWIDGET_H'
fi > nehewidget.h

echo "create smoke.pro ..."
if [ "1" ] ; then 
echo 'TEMPLATE	= app'
echo 'CONFIG		+= qt opengl warn_on release'
echo 'HEADERS		= nehewidget.h'
echo 'HEADERS     += mainwindow.h'
echo 'SOURCES		= nehewidget.cpp \'
echo '		  main.cpp'
echo 'TARGET		= qt-smoke2'
echo 'QT += opengl'
fi > smoke.pro

